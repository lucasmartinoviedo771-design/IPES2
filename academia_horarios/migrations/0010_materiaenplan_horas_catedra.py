# Generated by Django 5.2.5 on 2025-08-30 08:07

from django.db import migrations, models

TABLE = "academia_horarios_materiaenplan"

def only_mysql_do(apps, schema_editor):
    """
    Ejecuta operaciones de base de datos personalizadas solo en MySQL.
    Para un AddField simple y nullable, normalmente no se necesita nada aquí.
    """
    if schema_editor.connection.vendor != "mysql":
        return
    # Si por alguna razón el AddField estándar fallara en MySQL,
    # aquí podrías ejecutar el `ALTER TABLE ... ADD COLUMN ...` manualmente.
    pass

def only_mysql_undo(apps, schema_editor):
    """
    Operación de rollback opcional para MySQL.
    """
    if schema_editor.connection.vendor != "mysql":
        return
    # Aquí iría el `ALTER TABLE ... DROP COLUMN ...` si fuera necesario.
    pass

class Migration(migrations.Migration):

    dependencies = [
        ("academia_horarios", "0009_alter_horarioclase_unique_together_and_more"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            # La sección de base de datos está preparada para código específico
            # de MySQL, pero en este caso no es necesario.
            database_operations=[
                migrations.RunPython(only_mysql_do, only_mysql_undo),
            ],

            # La sección de estado contiene la operación original.
            # Esto actualiza el historial de modelos de Django para que sepa
            # que el campo 'horas_catedra' existe, sin ejecutar la operación
            # de forma estándar en bases de datos como SQLite.
            state_operations=[
                migrations.AddField(
                    model_name="materiaenplan",
                    name="horas_catedra",
                    field=models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Cantidad semanal de horas cátedra (40’). Dejar vacío = sin tope.",
                        null=True,
                    ),
                ),
            ],
        )
    ]
